version: '3'

services:
  traefik:
    container_name: traefik
    image: traefik:v2.10
    command: 
      - --api.insecure=true
      - --api.dashboard=true
      - --providers.docker
      - --metrics.prometheus=true
      - --providers.docker.watch
      # - --entryPoints.metrics.address=:8082
      # - --metrics.prometheus.entryPoint=metrics
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  whoami:
    container_name: whoami
    image: traefik/whoami
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090
    labels:
      - "traefik.http.routers.prometheus.rule=Host(`prom.localhost`)"
      - "traefik.http.routers.prometheus.service=prometheus"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"

  grafana:
    container_name: grafana
    image: grafana/grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - 3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    restart: always

    labels:
    - "traefik.http.routers.grafana.rule=Host(`grafana.localhost`)"
    - "traefik.http.routers.grafana.service=grafana"
    - "traefik.http.services.grafana.loadbalancer.server.port=3000"


volumes:
    prometheus_data: {}
    grafana_data: {}